
# Support for split-debuginfo [should eventually](https://github.com/rust-lang/rust/issues/34651) land,
# hopefully giving us an out-of-the-box way to separate the code from the debugging information.
# We should use the "objcopy --only-keep-debug" and "add-symbol-file" meanwhile
# and separating stack tracing into raw trace and symbolication parts.

[package]
name = "mm2"
version = "0.1.0"
edition = "2018"
default-run = "mm2"

[features]
native = [
  "hyper", "tokio-core", "dirs",
  "common/native", "peers/native", "coins/native", # "portfolio/native"
]
w-bindgen = [
  "js-sys", "wasm-bindgen", "wasm-bindgen-futures", "wasm-bindgen-test", "web-sys",
  "coins/w-bindgen", "common/w-bindgen", "peers/w-bindgen"
]

[[bin]]
name = "mm2"
path = "mm2src/mm2_bin.rs"
test = false
doctest = false
bench = false

[[bin]]
name = "docker_tests"
path = "mm2src/docker_tests.rs"

[lib]
name = "mm2"
path = "mm2src/mm2_lib.rs"
crate-type = ["staticlib"]
test = false
doctest = false
bench = false

[profile.dev]
# Enable light optimizations. We want a debuggable version but not a completely dumb one.
# Can override this with "set CARGO_BUILD_RUSTFLAGS=-C opt-level=0".
opt-level = 1

# Uncomment on Raspberry Pi
# cf. https://github.com/rust-lang/rust/issues/62896
#codegen-units = 1

[profile.test]
# Should probably match "profile.dev", given that we're reusing the libraries.
opt-level = 1

[profile.release]
# Due to the "overrides" only affects our workspace crates, as intended.
debug = true
# For better or worse, might affect the stack traces in our portion of the code.
#opt-level = 1

[profile.release.overrides."*"]
# Turns debugging symbols off for the out-of-workspace dependencies.
debug = false

[dependencies]
async-std = {version = "1.5", features = ["unstable"]}
atomic = "0.4"
bigdecimal = { version = "0.1", features = ["serde"] }
bitcrypto = { git = "https://github.com/artemii235/parity-bitcoin.git" }
bytes = "0.4"
coins = { path = "mm2src/coins" }
common = { path = "mm2src/common" }
crc = "1.8"
crc32fast = { version = "1.2", features = ["std", "nightly"] }
crossbeam = "0.7"
dirs = { version = "1", optional = true }
enum-primitive-derive = "0.1"
fomat-macros = "0.2"
futures01 = { version = "0.1", package = "futures" }
futures-cpupool = "0.1"
# NB: tokio-timer 2+ is targeted at "Tokio runtime" and heavy load (spawns several timer threads there),
# whereas futures-timer works with any reactor and spawns one global timer thread (fits out load better).
futures-timer = "0.1"
futures = { version = ">=0.3.0-alpha.16, <0.4", package = "futures-preview", features = ["compat", "async-await", "nightly"] }
gstuff = { version = "0.6", features = ["nightly"] }
hex = "0.3.2"
http = "0.1"
hyper = { version = "0.12", optional = true }
keys = { git = "https://github.com/artemii235/parity-bitcoin.git" }
lazy_static = "1.3"
libc = "0.2"
num-rational = { version = "0.2", features = ["serde", "bigint", "bigint-std"] }
num-traits = "0.2"
rpc = { git = "https://github.com/artemii235/parity-bitcoin.git" }
parking_lot = { version = "0.7", features = ["nightly"] }
peers = { path = "mm2src/peers" }
# AP: portfolio RPCs are not documented and not used as of now
# so the crate is disabled to speed up the entire removal of C code
# portfolio = { path = "mm2src/portfolio" }
primitives = { git = "https://github.com/artemii235/parity-bitcoin.git" }
rand = { version = "0.7", features = ["std", "small_rng"] }
# TODO: Reduce the size of regex by disabling the features we don't use.
# cf. https://github.com/rust-lang/regex/issues/583
regex = "1"
serde = "1.0"
serde_bencode = "0.2"
serde_json = "1.0"
serde_derive = "1.0"
serialization = { git = "https://github.com/artemii235/parity-bitcoin.git" }
serialization_derive = { git = "https://github.com/artemii235/parity-bitcoin.git" }

# Pin `term` to 0.5.1 because `dirs` is not portable, cf.
# https://github.com/Stebalien/term/commit/84cfdb51775b327fedf21784749d862fdffa10b4#diff-80398c5faae3c069e4e6aa2ed11b28c0
term = "=0.5.1"

tokio-core = { version = "0.1", optional = true }
unwrap = "1.2"
uuid = { version = "0.7", features = ["serde", "v4"] }
winapi = "0.3"

wasm-bindgen = { version = "0.2.50", features = ["serde-serialize", "nightly"], optional = true }
js-sys = { version = "0.3.27", optional = true }
wasm-bindgen-futures = { version = "0.4.1", optional = true }
wasm-bindgen-test = { version = "0.3.1", optional = true }

# LND
grpcio = "0.3.0"
protobuf = "2.0.2"
futures = "0.1.16"

[dependencies.web-sys]
version = "0.3.4"
features = [
  'console',
]
optional = true

[dev-dependencies]
libsecp256k1 = "0.2.2"
mocktopus = "0.7.0"
rand4 = { version = "0.4", package = "rand" }
testcontainers = { git = "https://github.com/artemii235/testcontainers-rs.git" }

[workspace]
members = [
  "mm2src/coins",
]

# The backtrace disables build.define("HAVE_DL_ITERATE_PHDR", "1"); for android which results in "unknown" function
# names being printed, but dl_iterate_phdr is present since API version 21 https://github.com/rust-lang/rust/issues/17520#issuecomment-344885468
# We're using 21 version for Android build so we're fine to use the patch.
# Consider removing once this issue is solved and fix applied to upstream repository
# https://github.com/rust-lang/backtrace-rs/issues/227
[patch.crates-io]
backtrace = { git = "https://github.com/artemii235/backtrace-rs.git" }
backtrace-sys = { git = "https://github.com/artemii235/backtrace-rs.git" }
num-rational = { git =  "https://github.com/artemii235/num-rational.git" }
# Remove when the fix applied to upstream
# https://github.com/CodeSandwich/Mocktopus/pull/50
mocktopus_macros = { git = "https://github.com/artemii235/Mocktopus.git" }
